@{
    ViewBag.Title = "Makaleler";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using ProgrammersBlog.Core.Concrete.Dtos.ArticleDto
@model ArticleListDto


<ol class="breadcrumb mb-3 mt-2">
    <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Home" asp-action="Index">Admin</a></li>
    <li class="breadcrumb-item active"><a asp-area="Admin" asp-controller="Article" asp-action="Index">Makaleler</a></li>
</ol>

<div class="card mb-4">
    <div class="card-header">
        <i class="fas fa-table mr-1"></i>
        Makaleler
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="articlesTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Kategori</th>
                        <th>Başlık</th>
                        <th>Küçük Resim</th>
                        <th>Tarih</th>
                        <th>Okunma Sayısı</th>
                        <th>Yorum Sayısı</th>
                        <th>Aktif Mi?</th>
                        <th>Silindi Mi?</th>
                        <th>Oluşturulma Tarihi</th>
                        <th>Oluşturan Kullanıcı Adı</th>
                        <th>Son Düzenlenme Tarihi</th>
                        <th>Son Düzenleyen Kullanıcı Adı</th>
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>#</th>
                        <th>Kategori</th>
                        <th>Başlık</th>
                        <th>Küçük Resim</th>
                        <th>Tarih</th>
                        <th>Okunma Sayısı</th>
                        <th>Yorum Sayısı</th>
                        <th>Aktif Mi?</th>
                        <th>Silindi Mi?</th>
                        <th>Oluşturulma Tarihi</th>
                        <th>Oluşturan Kullanıcı Adı</th>
                        <th>Son Düzenlenme Tarihi</th>
                        <th>Son Düzenleyen Kullanıcı Adı</th>
                        <th>İşlemler</th>
                    </tr>
                </tfoot>
                <tbody>
                    @foreach (var item in Model.Articles)
                    {
                        <tr name="@item.Id">
                            <td>@item.Id</td>
                            <td>@item.Category.Name</td>
                            <td>@item.Title</td>
                            <td>
                                <img src="~/img/@item.Thumbnail" class="my-image-table" />
                            </td>
                            <td>@item.CreatedDate.ToShortDateString()</td>
                            <td>@item.ViewsCount</td>
                            <td>@item.CommentCount</td>
                            <td>@(item.IsActive ? "Evet" : "Hayır")</td>
                            <td>@(item.IsDeleted ? "Evet" : "Hayır")</td>
                            <td>@item.CreatedDate.ToShortDateString()</td>
                            <td>@item.CreatedByName</td>
                            <td>@item.UpdateDate.ToShortDateString()</td>
                            <td>@item.UpdateByName</td>
                            <td>
                                <a class="btn btn-primary btn-sm btn-update" asp-controller="Article" asp-action="Update" asp-route-id="@item.Id"> <span class="fas fa-edit"></span> </a>

                                <button class="btn btn-danger btn-delete btn-sm " data-id="@item.Id"><span class="fas fa-minus-circle"></span> </button>
                            </td>
                        </tr>
                    }


                </tbody>
            </table>
        </div>
    </div>
</div>


@section scripts{
    <script>
        $(document).ready(function () {
            //DataTables starts here.
            const dataTable = $('#articlesTable').DataTable({

                dom:
                    "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",


                buttons: [
                    {
                        text: 'Ekle',
                        className: 'btn btn-success',
                        attr: {
                            id: "btnAdd"
                        },
                        action: function (e, dt, node, config) {
                            window.location.href = "/Admin/Article/Add";
                        }
                    },
                    
                    
                    {
                        text: 'Yenile',
                        className: 'btn btn-warning',
                        action: function (e, dt, node, config) {

                            $(".spinner-border").show();

                            $.ajax({
                                type: "GET",
                                url: "/Admin/Article/GetAllArticles",
                                contentType: "application/json",

                                beforeSend: function () {
                                    $("#articlesTable").hide();
                                    $(".spinner-border").show();
                                },

                                success: function (articlesResult) {

                                    console.log(articlesResult)
                                    const result = jQuery.parseJSON(articlesResult)
                                    console.log(result)

                                    dataTable.clear();
                                    if (result.Data.ResultStatusType === 0) {

                                        $.each(result.Data.Articles, function (index, article) {
                                            const newTableRow = dataTable.row.add([
                                                article.Id,
                                                article.Category.Name,
                                                article.Title,
                                                `<img src="/img/${article.Thumbnail}" class="my-image-table"/>`,
                                                `${convertToDateString(article.CreatedDate)}`,
                                                article.ViewsCount,
                                                article.CommentCount,
                                                `${article.IsActive ? "Evet" : "Hayır"}`,
                                                `${article.IsDeleted ? "Evet" : "Hayır"}`,
                                                `${convertToDateString(article.CreatedDate)}`,
                                                article.CreatedByName,
                                                `${convertToDateString(article.UpdateDate)}`,
                                                article.UpdateByName,

                                                `
                                               <a   href="/Admin/Article/Update/${article.Id}" class="btn btn-primary btn-sm btn-update"><span class="fas fa-edit"></span></a>

                                            <button class="btn btn-danger btn-sm btn-delete" data-id="${article.Id}"><span class="fas            fa-minus-circle"></span></button>
                                                               `
                                            ]).node();

                                            const jqueryTableRow = $(newTableRow)
                                            jqueryTableRow.attr("name", `${article.Id}`)
                                        })
                                        dataTable.draw();
                                        $(".spinner-border").hide();
                                        $("#articlesTable").fadeIn(1400);
                                    }

                                    else {
                                        toastr.error(`${result.Message}`, 'İşlem Başarısız!')
                                    }

                                },

                                error: function (err) {
                                    console.log(err)
                                    $(".spinner-border").hide();
                                    $("#articlesTable").fadeIn(1400);
                                    toastr.error(`${err.responseText}`, 'Hata!')
                                }
                            });

                        }
                    }
                ],


                language: {
                    "emptyTable": "Tabloda herhangi bir veri mevcut değil",
                    "info": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                    "infoEmpty": "Kayıt yok",
                    "infoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                    "infoThousands": ".",
                    "lengthMenu": "Sayfada _MENU_ kayıt göster",
                    "loadingRecords": "Yükleniyor...",
                    "processing": "İşleniyor...",
                    "search": "Ara:",
                    "zeroRecords": "Eşleşen kayıt bulunamadı",
                    "paginate": {
                        "first": "İlk",
                        "last": "Son",
                        "next": "Sonraki",
                        "previous": "Önceki"
                    },
                    "aria": {
                        "sortAscending": ": artan sütun sıralamasını aktifleştir",
                        "sortDescending": ": azalan sütun sıralamasını aktifleştir"
                    },
                    "select": {
                        "rows": {
                            "_": "%d kayıt seçildi",
                            "1": "1 kayıt seçildi"
                        },
                        "cells": {
                            "1": "1 hücre seçildi",
                            "_": "%d hücre seçildi"
                        },
                        "columns": {
                            "1": "1 sütun seçildi",
                            "_": "%d sütun seçildi"
                        }
                    },
                    "autoFill": {
                        "cancel": "İptal",
                        "fillHorizontal": "Hücreleri yatay olarak doldur",
                        "fillVertical": "Hücreleri dikey olarak doldur",
                        "fill": "Bütün hücreleri <i>%d<\/i> ile doldur"
                    },
                    "buttons": {
                        "collection": "Koleksiyon <span class=\"ui-button-icon-primary ui-icon ui-icon-triangle-1-s\"><\/span>",
                        "colvis": "Sütun görünürlüğü",
                        "colvisRestore": "Görünürlüğü eski haline getir",
                        "copySuccess": {
                            "1": "1 satır panoya kopyalandı",
                            "_": "%ds satır panoya kopyalandı"
                        },
                        "copyTitle": "Panoya kopyala",
                        "csv": "CSV",
                        "excel": "Excel",
                        "pageLength": {
                            "-1": "Bütün satırları göster",
                            "_": "%d satır göster"
                        },
                        "pdf": "PDF",
                        "print": "Yazdır",
                        "copy": "Kopyala",
                        "copyKeys": "Tablodaki veriyi kopyalamak için CTRL veya u2318 + C tuşlarına basınız. İptal etmek için bu mesaja tıklayın veya escape tuşuna basın.",
                        "createState": "Şuanki Görünümü Kaydet",
                        "removeAllStates": "Tüm Görünümleri Sil",
                        "removeState": "Aktif Görünümü Sil",
                        "renameState": "Aktif Görünümün Adını Değiştir",
                        "savedStates": "Kaydedilmiş Görünümler",
                        "stateRestore": "Görünüm -&gt; %d",
                        "updateState": "Aktif Görünümün Güncelle"
                    },
                    "searchBuilder": {
                        "add": "Koşul Ekle",
                        "button": {
                            "0": "Arama Oluşturucu",
                            "_": "Arama Oluşturucu (%d)"
                        },
                        "condition": "Koşul",
                        "conditions": {
                            "date": {
                                "after": "Sonra",
                                "before": "Önce",
                                "between": "Arasında",
                                "empty": "Boş",
                                "equals": "Eşittir",
                                "not": "Değildir",
                                "notBetween": "Dışında",
                                "notEmpty": "Dolu"
                            },
                            "number": {
                                "between": "Arasında",
                                "empty": "Boş",
                                "equals": "Eşittir",
                                "gt": "Büyüktür",
                                "gte": "Büyük eşittir",
                                "lt": "Küçüktür",
                                "lte": "Küçük eşittir",
                                "not": "Değildir",
                                "notBetween": "Dışında",
                                "notEmpty": "Dolu"
                            },
                            "string": {
                                "contains": "İçerir",
                                "empty": "Boş",
                                "endsWith": "İle biter",
                                "equals": "Eşittir",
                                "not": "Değildir",
                                "notEmpty": "Dolu",
                                "startsWith": "İle başlar",
                                "notContains": "İçermeyen",
                                "notStartsWith": "Başlamayan",
                                "notEndsWith": "Bitmeyen"
                            },
                            "array": {
                                "contains": "İçerir",
                                "empty": "Boş",
                                "equals": "Eşittir",
                                "not": "Değildir",
                                "notEmpty": "Dolu",
                                "without": "Hariç"
                            }
                        },
                        "data": "Veri",
                        "deleteTitle": "Filtreleme kuralını silin",
                        "leftTitle": "Kriteri dışarı çıkart",
                        "logicAnd": "ve",
                        "logicOr": "veya",
                        "rightTitle": "Kriteri içeri al",
                        "title": {
                            "0": "Arama Oluşturucu",
                            "_": "Arama Oluşturucu (%d)"
                        },
                        "value": "Değer",
                        "clearAll": "Filtreleri Temizle"
                    },
                    "searchPanes": {
                        "clearMessage": "Hepsini Temizle",
                        "collapse": {
                            "0": "Arama Bölmesi",
                            "_": "Arama Bölmesi (%d)"
                        },
                        "count": "{total}",
                        "countFiltered": "{shown}\/{total}",
                        "emptyPanes": "Arama Bölmesi yok",
                        "loadMessage": "Arama Bölmeleri yükleniyor ...",
                        "title": "Etkin filtreler - %d",
                        "showMessage": "Tümünü Göster",
                        "collapseMessage": "Tümünü Gizle"
                    },
                    "thousands": ".",
                    "datetime": {
                        "amPm": [
                            "öö",
                            "ös"
                        ],
                        "hours": "Saat",
                        "minutes": "Dakika",
                        "next": "Sonraki",
                        "previous": "Önceki",
                        "seconds": "Saniye",
                        "unknown": "Bilinmeyen",
                        "weekdays": {
                            "6": "Paz",
                            "5": "Cmt",
                            "4": "Cum",
                            "3": "Per",
                            "2": "Çar",
                            "1": "Sal",
                            "0": "Pzt"
                        },
                        "months": {
                            "9": "Ekim",
                            "8": "Eylül",
                            "7": "Ağustos",
                            "6": "Temmuz",
                            "5": "Haziran",
                            "4": "Mayıs",
                            "3": "Nisan",
                            "2": "Mart",
                            "11": "Aralık",
                            "10": "Kasım",
                            "1": "Şubat",
                            "0": "Ocak"
                        }
                    },
                    "decimal": ",",
                    "editor": {
                        "close": "Kapat",
                        "create": {
                            "button": "Yeni",
                            "submit": "Kaydet",
                            "title": "Yeni kayıt oluştur"
                        },
                        "edit": {
                            "button": "Düzenle",
                            "submit": "Güncelle",
                            "title": "Kaydı düzenle"
                        },
                        "error": {
                            "system": "Bir sistem hatası oluştu (Ayrıntılı bilgi)"
                        },
                        "multi": {
                            "info": "Seçili kayıtlar bu alanda farklı değerler içeriyor. Seçili kayıtların hepsinde bu alana aynı değeri atamak için buraya tıklayın; aksi halde her kayıt bu alanda kendi değerini koruyacak.",
                            "noMulti": "Bu alan bir grup olarak değil ancak tekil olarak düzenlenebilir.",
                            "restore": "Değişiklikleri geri al",
                            "title": "Çoklu değer"
                        },
                        "remove": {
                            "button": "Sil",
                            "confirm": {
                                "_": "%d adet kaydı silmek istediğinize emin misiniz?",
                                "1": "Bu kaydı silmek istediğinizden emin misiniz?"
                            },
                            "submit": "Sil",
                            "title": "Kayıtları sil"
                        }
                    },
                    "stateRestore": {
                        "creationModal": {
                            "button": "Kaydet",
                            "columns": {
                                "search": "Kolon Araması",
                                "visible": "Kolon Görünümü"
                            },
                            "name": "Görünüm İsmi",
                            "order": "Sıralama",
                            "paging": "Sayfalama",
                            "scroller": "Kaydırma (Scrool)",
                            "search": "Arama",
                            "searchBuilder": "Arama Oluşturucu",
                            "select": "Seçimler",
                            "title": "Yeni Görünüm Oluştur",
                            "toggleLabel": "Kaydedilecek Olanlar"
                        },
                        "duplicateError": "Bu Görünüm Daha Önce Tanımlanmış",
                        "emptyError": "Görünüm Boş Olamaz",
                        "emptyStates": "Herhangi Bir Görünüm Yok",
                        "removeConfirm": "Görünümü Silmek İstediğinize Eminminisiniz?",
                        "removeError": "Görünüm Silinemedi",
                        "removeJoiner": "ve",
                        "removeSubmit": "Sil",
                        "removeTitle": "Görünüm Sil",
                        "renameButton": "Değiştir",
                        "renameLabel": "Görünüme Yeni İsim Ver -&gt; %s:",
                        "renameTitle": "Görünüm İsmini Değiştir"
                    }
                }
            });
            //DataTables ends here.




            //Ajax POST / Deleting a Articles starts from here
            $(document).on('click', '.btn-delete', function (event) {

                event.preventDefault();

                const id = $(this).attr("data-id");

                const tableRow = $(`[name="${id}"]`)

                const articleTitle = tableRow.find("td:eq(2)").text();

                Swal.fire({
                    title: 'Silmek istediğinize emin misiniz?',
                    text: `${articleTitle} başlıklı makale silinecektir!`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, silmek istiyorum.',
                    cancelButtonText: 'Hayır, silmek istemiyorum.'
                }).then((result) => {


                    if (result.isConfirmed) {

                        $.ajax({
                            type: 'POST',
                            dataType: 'json',
                            data: { articleId: id },
                            url: '@Url.Action("Delete","Article")',
                            success: function (data) {

                                const articleResult = JSON.parse(data);
                                console.log(articleResult)

                                if (articleResult.ResultStatus === 0) {

                                    Swal.fire(
                                        'Silindi!',
                                        `${articleResult.Message}`,
                                        'success'
                                    )

                                    dataTable.row(tableRow).remove().draw()
                                }

                                else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Başarısız İşlemz...',
                                        text: `${articleResult.Message}`
                                    })
                                }

                            },
                            error: function (err) {
                                console.log(err)
                                toastr.error(`${err.responseText}`, "Hata!")
                            }
                        })
                    }
                })
            })
            //Ajax POST / Deleting a Articles ends from here

        })


    </script>
}